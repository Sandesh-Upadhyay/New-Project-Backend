
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://znmimwqrvtfqoxtsgagq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpubWltd3FydnRmcW94dHNnYWdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3ODg3NDcsImV4cCI6MjA1NzM2NDc0N30.-8gFgOcMKfDGoq9kX6rtXPfovQA1YUVI7v7Ia_SVWbc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  global: {
    fetch: async (url: RequestInfo | URL, options?: RequestInit) => {
      try {
        console.log(`Fetching from integration client: ${typeof url === 'string' ? url : url.toString()}`);
        // Use a lower timeout for better responsiveness when offline
        const response = await fetch(url, {
          ...options,
          signal: AbortSignal.timeout(8000)
        });
        return response;
      } catch (err) {
        console.error('Integration client fetch error:', err);
        throw err;
      }
    },
    headers: {
      'X-Client-Info': 'lovable-integration-client'
    }
  }
});
